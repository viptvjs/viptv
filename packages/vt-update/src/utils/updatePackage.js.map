{"version":3,"file":"updatePackage.js","sourceRoot":"","sources":["updatePackage.ts"],"names":[],"mappings":"AAAA,+BAA+B;AAC/B,OAAO,EACL,mBAAmB,EACnB,iBAAiB,EACjB,kCAAkC,EAClC,gBAAgB,EAChB,mBAAmB,EACnB,kBAAkB,EAClB,oBAAoB,GACrB,MAAM,oBAAoB,CAAA;AAC3B,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAA;AAG5C,MAAM,CAAC,MAAM,cAAc,GAAG,KAAK,EACjC,cAA8B,EAC9B,YAAoC,EACrB,EAAE;IACjB,MAAM,OAAO,CAAC,GAAG,CACf,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,KAAK,EAAE,UAAU,EAAE,EAAE;QACjD,IAAI,gBAAgB,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC;YAC1C,OAAO,CAAC,KAAK,CACX,aAAa,UAAU,yDAAyD,CACjF,CAAA;YACD,OAAO,YAAY,CAAC,UAAU,CAAC,CAAA;QACjC,CAAC;aAAM,IAAI,mBAAmB,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC;YACpD,OAAO,CAAC,KAAK,CACX,IAAI,UAAU,uEAAuE,UAAU,CAAC,SAAS,CACvG,CAAC,CACF,6BAA6B,CAC/B,CAAA;YAED,YAAY,CAAC,UAAU,CAAC,GAAG,IAAI,MAAM,UAAU,CAC7C,cAAc,EACd,UAAU,EACV,MAAM,CACP,EAAE,CAAA;QACL,CAAC;aAAM,IAAI,oBAAoB,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC;YACrD,YAAY,CAAC,UAAU,CAAC,GAAG,IAAI,MAAM,UAAU,CAC7C,cAAc,EACd,UAAU,EACV,QAAQ,CACT,EAAE,CAAA;QACL,CAAC;aAAM,IAAI,iBAAiB,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC;YAClD,YAAY,CAAC,UAAU,CAAC,GAAG,MAAM,UAAU,CACzC,cAAc,EACd,UAAU,EACV,MAAM,CACP,CAAA;QACH,CAAC;aAAM,IAAI,kCAAkC,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;YAC/D,YAAY,CAAC,UAAU,CAAC,GAAG,MAAM,UAAU,CACzC,cAAc,EACd,UAAU,EACV,MAAM,CACP,CAAA;QACH,CAAC;aAAM,IACL,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC;YACpC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,EACnC,CAAC;YACD,YAAY,CAAC,UAAU,CAAC,GAAG,MAAM,UAAU,CACzC,cAAc,EACd,UAAU,EACV,MAAM,CACP,CAAA;QACH,CAAC;IACH,CAAC,CAAC,CACH,CAAA;AACH,CAAC,CAAA","sourcesContent":["/* eslint-disable no-console */\nimport {\n  DEPRECATED_PACKAGES,\n  OFFICIAL_PACKAGES,\n  OFFICIAL_PLUGINS_AND_THEMES_REGEXP,\n  REMOVED_PACKAGES,\n  THIRD_PARTY_PLUGINS,\n  THIRD_PARTY_THEMES,\n  VUE_RELATED_PACKAGES,\n} from '../config/index.js'\nimport { getVersion } from './getVersion.js'\nimport type { PackageManager } from './packageManager.js'\n\nexport const updatePackages = async (\n  packageManager: PackageManager,\n  dependencies: Record<string, string>,\n): Promise<void> => {\n  await Promise.all(\n    Object.keys(dependencies).map(async (dependency) => {\n      if (REMOVED_PACKAGES.includes(dependency)) {\n        console.error(\n          `Removing \"${dependency}\" from your dependencies, as it's no longer maintained.`,\n        )\n        delete dependencies[dependency]\n      } else if (DEPRECATED_PACKAGES.includes(dependency)) {\n        console.error(\n          `\"${dependency}\"is deprecated, please remove it from your dependencies and import \"${dependency.substring(\n            1,\n          )}\" from \"vuepress\" directly.`,\n        )\n\n        dependencies[dependency] = `^${await getVersion(\n          packageManager,\n          dependency,\n          'next',\n        )}`\n      } else if (VUE_RELATED_PACKAGES.includes(dependency)) {\n        dependencies[dependency] = `^${await getVersion(\n          packageManager,\n          dependency,\n          'latest',\n        )}`\n      } else if (OFFICIAL_PACKAGES.includes(dependency)) {\n        dependencies[dependency] = await getVersion(\n          packageManager,\n          dependency,\n          'next',\n        )\n      } else if (OFFICIAL_PLUGINS_AND_THEMES_REGEXP.test(dependency)) {\n        dependencies[dependency] = await getVersion(\n          packageManager,\n          dependency,\n          'next',\n        )\n      } else if (\n        THIRD_PARTY_PLUGINS.test(dependency) ||\n        THIRD_PARTY_THEMES.test(dependency)\n      ) {\n        dependencies[dependency] = await getVersion(\n          packageManager,\n          dependency,\n          'auto',\n        )\n      }\n    }),\n  )\n}"]}