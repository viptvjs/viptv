{"version":3,"file":"registry.js","sourceRoot":"","sources":["../../src/utils/registry.ts"],"names":[],"mappings":"AAAA,+BAA+B;AAC/B,OAAO,EAAE,SAAS,EAAE,MAAM,oBAAoB,CAAA;AAG9C,MAAM,mBAAmB,GAAG,iCAAiC,CAAA;AAE7D,MAAM,CAAC,MAAM,WAAW,GAAG,CAAC,cAA8B,EAAU,EAAE;IACpE,IACE,cAAc,KAAK,MAAM;QACzB,CAAC,SAAS,CAAC,GAAG,cAAc,YAAY,EAAE;YACxC,KAAK,EAAE,IAAI;SACZ,CAAC;aACC,MAAM,CAAC,QAAQ,EAAE;aACjB,UAAU,CAAC,GAAG,CAAC;QAElB,OAAO,SAAS,CAAC,GAAG,cAAc,+BAA+B,EAAE;YACjE,KAAK,EAAE,IAAI;SACZ,CAAC;aACC,MAAM,CAAC,QAAQ,EAAE;aACjB,IAAI,EAAE;aACN,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAA;IAEzB,IACE,cAAc,KAAK,KAAK;QACxB,CAAC,SAAS,CAAC,GAAG,cAAc,YAAY,EAAE;YACxC,KAAK,EAAE,IAAI;SACZ,CAAC,CAAC,MAAM,EACT,CAAC;QACD,OAAO,CAAC,IAAI,CACV,kFAAkF,CACnF,CAAA;QACD,OAAO,SAAS;QACd,oDAAoD;QACpD,yBAAyB,EACzB,EAAE,KAAK,EAAE,IAAI,EAAE,CAChB;aACE,MAAM,CAAC,QAAQ,EAAE;aACjB,IAAI,EAAE;aACN,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAA;IACzB,CAAC;IAED,OAAO,SAAS,CAAC,GAAG,cAAc,sBAAsB,EAAE;QACxD,KAAK,EAAE,IAAI;KACZ,CAAC;SACC,MAAM,CAAC,QAAQ,EAAE;SACjB,IAAI,EAAE;SACN,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAA;AACzB,CAAC,CAAA;AAED,MAAM,CAAC,MAAM,mBAAmB,GAAG,CAAC,cAA8B,EAAQ,EAAE;IAC1E,MAAM,YAAY,GAAG,WAAW,CAAC,cAAc,CAAC,CAAA;IAEhD,IAAI,yCAAyC,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC;QACjE,OAAO,CAAC,KAAK,CACX,sEAAsE,CACvE,CAAA;QAED,IAAI,cAAc,KAAK,MAAM,EAAE,CAAC;YAC9B,SAAS,CACP,GAAG,cAAc,kCAAkC,mBAAmB,EAAE,EACxE,EAAE,KAAK,EAAE,IAAI,EAAE,CAChB,CAAA;QACH,CAAC;aAAM,IAAI,cAAc,KAAK,KAAK,EAAE,CAAC;YACpC,SAAS,CAAC,2BAA2B,mBAAmB,EAAE,EAAE;gBAC1D,KAAK,EAAE,IAAI;aACZ,CAAC,CAAA;QACJ,CAAC;aAAM,CAAC;YACN,SAAS,CACP,GAAG,cAAc,wBAAwB,mBAAmB,EAAE,EAC9D,EAAE,KAAK,EAAE,IAAI,EAAE,CAChB,CAAA;QACH,CAAC;IACH,CAAC;AACH,CAAC,CAAA","sourcesContent":["/* eslint-disable no-console */\nimport { spawnSync } from 'node:child_process'\nimport type { PackageManager } from './packageManager.js'\n\nconst NPM_MIRROR_REGISTRY = 'https://registry.npmmirror.com/'\n\nexport const getRegistry = (packageManager: PackageManager): string => {\n  if (\n    packageManager === 'yarn' &&\n    !spawnSync(`${packageManager} --version`, {\n      shell: true,\n    })\n      .stdout.toString()\n      .startsWith('1')\n  )\n    return spawnSync(`${packageManager} config get npmRegistryServer`, {\n      shell: true,\n    })\n      .stdout.toString()\n      .trim()\n      .replace(/\\/?$/, '/')\n\n  if (\n    packageManager === 'bun' &&\n    !spawnSync(`${packageManager} --version`, {\n      shell: true,\n    }).status\n  ) {\n    console.warn(\n      'bun does not support get registry at the time, using npm global registry instead',\n    )\n    return spawnSync(\n      // TODO: wait for bun to support get registry config\n      `npm config get registry`,\n      { shell: true },\n    )\n      .stdout.toString()\n      .trim()\n      .replace(/\\/?$/, '/')\n  }\n\n  return spawnSync(`${packageManager} config get registry`, {\n    shell: true,\n  })\n    .stdout.toString()\n    .trim()\n    .replace(/\\/?$/, '/')\n}\n\nexport const checkTaobaoRegistry = (packageManager: PackageManager): void => {\n  const userRegistry = getRegistry(packageManager)\n\n  if (/https:\\/\\/registry\\.npm\\.taobao\\.org\\/?/.test(userRegistry)) {\n    console.error(\n      'npm.taobao.org is no longer available, resetting it to npmmirror.com',\n    )\n\n    if (packageManager === 'yarn') {\n      spawnSync(\n        `${packageManager} config set npmRegistryServer  ${NPM_MIRROR_REGISTRY}`,\n        { shell: true },\n      )\n    } else if (packageManager === 'bun') {\n      spawnSync(`npm config set registry ${NPM_MIRROR_REGISTRY}`, {\n        shell: true,\n      })\n    } else {\n      spawnSync(\n        `${packageManager} config set registry ${NPM_MIRROR_REGISTRY}`,\n        { shell: true },\n      )\n    }\n  }\n}"]}