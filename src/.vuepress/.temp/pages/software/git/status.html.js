import comp from "D:/Administrator/Desktop/viptv-private/docs/.vuepress/.temp/pages/software/git/status.html.vue"
const data = JSON.parse("{\"path\":\"/software/git/status.html\",\"title\":\"纵向查看\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"纵向查看\",\"icon\":\"list\",\"order\":4,\"author\":\"廖雪峰\",\"category\":\"Git\",\"tag\":[\"Git\",\"软件\"],\"copyright\":\"Copyright by 廖雪峰 Edited by Mr.Hope\",\"description\":\"我们已经成功地添加并提交了一个 readme.txt 文件，继续修改 readme.txt 文件，改成如下内容: 现在，运行 git status 命令看看结果: git status 命令可以输出仓库当前的状态，上面的命令输出告诉我们，readme.txt 被修改过了，但还没有准备提交的修改。 简介输出 git status 命令的输出十分详细，但其...\",\"gitInclude\":[],\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://viptv.work/software/git/status.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"VIPTV - 云视听\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"纵向查看\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"我们已经成功地添加并提交了一个 readme.txt 文件，继续修改 readme.txt 文件，改成如下内容: 现在，运行 git status 命令看看结果: git status 命令可以输出仓库当前的状态，上面的命令输出告诉我们，readme.txt 被修改过了，但还没有准备提交的修改。 简介输出 git status 命令的输出十分详细，但其...\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"廖雪峰\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"Git\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"软件\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"纵向查看\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"廖雪峰\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"小结\",\"slug\":\"小结\",\"link\":\"#小结\",\"children\":[]}],\"readingTime\":{\"minutes\":2.67,\"words\":801},\"filePathRelative\":\"software/git/status.md\",\"excerpt\":\"<p>我们已经成功地添加并提交了一个 readme.txt 文件，继续修改 readme.txt 文件，改成如下内容:</p>\\n<div class=\\\"language-markdown\\\" data-ext=\\\"md\\\" data-title=\\\"md\\\"><pre class=\\\"language-markdown\\\"><code>Git is a distributed version control system.\\nGit is free software.\\n</code></pre></div><p>现在，运行 <code>git status</code> 命令看看结果:</p>\\n<div class=\\\"language-bash\\\" data-ext=\\\"sh\\\" data-title=\\\"sh\\\"><pre class=\\\"language-bash\\\"><code>$ <span class=\\\"token function\\\">git</span> status\\nOn branch master\\nChanges not staged <span class=\\\"token keyword\\\">for</span> commit:\\n  <span class=\\\"token punctuation\\\">(</span>use <span class=\\\"token string\\\">\\\"git add &lt;file&gt;...\\\"</span> to update what will be committed<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">(</span>use <span class=\\\"token string\\\">\\\"git checkout -- &lt;file&gt;...\\\"</span> to discard changes <span class=\\\"token keyword\\\">in</span> working directory<span class=\\\"token punctuation\\\">)</span>\\n\\n    modified:   readme.txt\\n\\nno changes added to commit <span class=\\\"token punctuation\\\">(</span>use <span class=\\\"token string\\\">\\\"git add\\\"</span> and/or <span class=\\\"token string\\\">\\\"git commit -a\\\"</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre></div>\",\"autoDesc\":true}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
