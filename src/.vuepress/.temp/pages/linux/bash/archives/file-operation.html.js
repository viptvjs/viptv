import comp from "D:/Administrator/Desktop/viptv-private/docs/.vuepress/.temp/pages/linux/bash/archives/file-operation.html.vue"
const data = JSON.parse("{\"path\":\"/linux/bash/archives/file-operation.html\",\"title\":\"文件操作\",\"lang\":\"zh-CN\",\"frontmatter\":{\"description\":\"文件操作 cp cp 命令用于将文件(或目录)拷贝到目的地。 其他参数 -a 拷贝时保留所有属性，包括所有者与权限 -v 显示拷贝的详细信息 mkdir mkdir 命令用于新建目录。 mv mv 命令用于将源文件移动到目的地。 参数 -i 覆盖已经存在的文件时，会提示确认 -u 只移动目的地不存在的文件，或比目的地更新的文件 rm rm 命令用于删除...\",\"gitInclude\":[],\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://viptv.work/linux/bash/archives/file-operation.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"VIPTV - 云视听\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"文件操作\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"文件操作 cp cp 命令用于将文件(或目录)拷贝到目的地。 其他参数 -a 拷贝时保留所有属性，包括所有者与权限 -v 显示拷贝的详细信息 mkdir mkdir 命令用于新建目录。 mv mv 命令用于将源文件移动到目的地。 参数 -i 覆盖已经存在的文件时，会提示确认 -u 只移动目的地不存在的文件，或比目的地更新的文件 rm rm 命令用于删除...\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"VIPTV - 云视听\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"文件操作\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"VIPTV - 云视听\\\",\\\"url\\\":\\\"/about\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"cp\",\"slug\":\"cp\",\"link\":\"#cp\",\"children\":[]},{\"level\":2,\"title\":\"mkdir\",\"slug\":\"mkdir\",\"link\":\"#mkdir\",\"children\":[]},{\"level\":2,\"title\":\"mv\",\"slug\":\"mv\",\"link\":\"#mv\",\"children\":[]},{\"level\":2,\"title\":\"rm\",\"slug\":\"rm\",\"link\":\"#rm\",\"children\":[]},{\"level\":2,\"title\":\"ln\",\"slug\":\"ln\",\"link\":\"#ln\",\"children\":[]}],\"readingTime\":{\"minutes\":1.31,\"words\":394},\"filePathRelative\":\"linux/bash/archives/file-operation.md\",\"excerpt\":\"\\n<h2>cp</h2>\\n<p><code>cp</code> 命令用于将文件(或目录)拷贝到目的地。</p>\\n<div class=\\\"language-bash\\\" data-ext=\\\"sh\\\" data-title=\\\"sh\\\"><pre class=\\\"language-bash\\\"><code><span class=\\\"token comment\\\"># 拷贝单个文件</span>\\n$ <span class=\\\"token function\\\">cp</span> <span class=\\\"token builtin class-name\\\">source</span> dest\\n\\n<span class=\\\"token comment\\\"># 拷贝多个文件</span>\\n$ <span class=\\\"token function\\\">cp</span> source1 source2 source3 dest\\n\\n<span class=\\\"token comment\\\"># -i 目的地有同名文件时会提示确认</span>\\n$ <span class=\\\"token function\\\">cp</span> <span class=\\\"token parameter variable\\\">-i</span> file1 file2\\n\\n<span class=\\\"token comment\\\"># -r 递归拷贝，将dir1拷贝到dir2，完成后dir2生成一个子目录dir1</span>\\n<span class=\\\"token comment\\\"># dir2如果不存在，将被创建</span>\\n<span class=\\\"token comment\\\"># 拷贝目录时，该参数是必需的</span>\\n$ <span class=\\\"token function\\\">cp</span> <span class=\\\"token parameter variable\\\">-r</span> dir1 dir2\\n\\n<span class=\\\"token comment\\\"># -u --update 只拷贝目的地没有的文件，或者比目的地同名文件更新的文件</span>\\n$ <span class=\\\"token function\\\">cp</span> <span class=\\\"token parameter variable\\\">-u</span> *.html destination\\n</code></pre></div>\",\"autoDesc\":true}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
